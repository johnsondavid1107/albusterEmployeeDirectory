{"version":3,"sources":["components/Jumbotron.js","components/Table.js","components/searchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Jumbotron","styles","header","fontSize","color","display","background","borderBottom","marginBottom","ptag","className","style","Table","props","scope","class","onClick","sort","employee","map","person","index","src","picture","large","alt","name","first","last","value","cell","email","dob","date","slice","SearchBar","state","find","employees","filteredEmployees","sortClicked","handleChange","event","target","setState","findEmployee","length","filterEmployees","filter","toLowerCase","includes","handleSort","array","a","b","console","log","axios","get","then","res","data","results","rowColor","inputF","margin","type","this","onChange","placeholder","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95ceb96f.chunk.js","sourcesContent":["import React from \"react\"\n\n\nfunction Jumbotron() {\n    const styles = {\n        header: {\n            fontSize: \"40px\",\n            color: \"white\"\n\n        }, display: {\n            background: \"#00004d\",\n            borderBottom: \"5px solid red\",\n            marginBottom:\"0px\"\n        }, ptag: {\n            color: \"white\"\n        }\n    }\n\n    return (\n        <div className=\"jumbotron jumbotron-fluid\" style={styles.display}>\n            <div className=\"container\">\n                <h1 className=\"display-4 text-center\" style={styles.header}>Employee Directory</h1>\n                <p className=\"text-center\" style={styles.ptag}>Click on the carrots to filter by heading or use the search box to narrow your results.</p>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default Jumbotron","import React from \"react\"\n\n\n\n//use axios call here to get data.  \nfunction Table(props) {\n    // console.log(props)\n    return (\n        <div>\n\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Image</th>\n                        <th scope=\"col\">Name<i class=\"fas fa-sort-up\" onClick={props.sort}></i></th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">DOB</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.employee.map((person, index) =>\n                        <tr key={index}>\n                            <th><img src={person.picture.large} alt=\"Epicture\"></img></th>\n                            <td>{person.name.first} {person.name.last}</td>\n                            <td value={person.cell}>{person.cell}</td>\n                            <td >{person.email}</td>\n                            <td>{person.dob.date.slice(0, 7)}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table >\n\n        </div>\n    )\n}\nexport default Table","import React from \"react\"\n// import API from \"../utils/API\"\nimport axios from \"axios\"\nimport Table from \"./Table\"\n// import employee from \"../employee.json\"\n\nclass SearchBar extends React.Component {\n    state = {\n        find: \"\",\n        employees: [],\n        filteredEmployees: [],\n        sortClicked: null\n    }\n\n    componentDidMount() {\n        axios.get(\"https://randomuser.me/api/?results=50&nat=us&inc=gender,dob,email,id,name,nat,cell,picture\").then(res =>\n            this.setState({\n                employees: res.data.results,\n                filteredEmployees: res.data.results\n            }))\n\n\n    }\n\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        this.setState({\n            find: value\n        }, () => this.findEmployee())\n        if (value.length <= 0) {\n            this.setState({ employees: this.state.employees })\n        }\n\n\n\n    }\n\n    findEmployee = () => {\n\n        const filterEmployees = this.state.employees.filter(person =>\n            (person.name.first.toLowerCase().includes(this.state.find.toLowerCase()))\n            ||\n            (person.name.last.toLowerCase().includes(this.state.find.toLowerCase()))\n            ||\n            (person.cell.includes(this.state.find))\n            ||\n            (person.email.includes(this.state.find))\n        )\n\n\n        this.setState({\n            filteredEmployees: filterEmployees\n        })\n\n        // console.log(this.state.employees)\n        // console.log(this.state.find)\n        // console.log(filterEmployees)\n\n\n    }\n    handleSort = () => {\n        this.setState({ sortClicked: true })\n        //learned this sort function from Stacked Overflow\n        let array = this.state.filteredEmployees\n        array.sort(function (a, b) {\n            let nameA = a.name.first.toLowerCase()\n            let nameB = b.name.first.toLowerCase()\n\n            if (nameA < nameB) {\n                return -1\n            }\n\n        })\n\n        this.setState({ filteredEmployees: array })\n\n        console.log(array)\n\n\n\n\n    }\n\n    render() {\n        const styles = {\n            rowColor: {\n                background: \"#F5F5F5\"\n            },\n            inputF: {\n                margin: \"10px\"\n            }\n        }\n        return (<div className=\"container-fluid\" style={styles.rowColor} >\n            <div className=\"row\">\n                <div className=\"col-md-5\"></div>\n                <div className=\"text-center\">\n                    <input type=\"text\"\n                        name=\"find\"\n                        value={this.state.find}\n                        className=\"form-control\"\n                        onChange={this.handleChange}\n                        placeholder=\"Search\" style={styles.inputF}></input>\n                </div>\n                <div className=\"col-md-5\">\n                </div>\n\n\n            </div>\n            <Table employee={this.state.filteredEmployees} sort={this.handleSort} />\n        </div>\n\n        )\n\n    }\n}\n\n\nexport default SearchBar;","import './App.css';\nimport Jumbotron from \"./components/Jumbotron\"\nimport SearchBar from \"./components/searchBar\"\n\nfunction App() {\n  return (<div>\n    <Jumbotron />\n    <SearchBar />\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}